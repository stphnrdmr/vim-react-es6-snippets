snippet cs
	var cx = React.addons.classSet;
snippet cdm
	componentDidMount() {
		${1}
	}
snippet cdup
	componentDidUpdate(prevProps, prevState) {
		${1}
	}
snippet cwm
	componentWillMount() {
		${1}
	}
snippet cwr
	componentWillReceiveProps(nextProps) {
		${1}
	}
snippet cwun
	componentWillUnmount() {
		${1}
	}
snippet cwu
	componentWillUpdate(nextProps, nextState) {
		${1}
	}
snippet cx
	cx({
		${1}: ${2}
	});
snippet fup
	forceUpdate(${1:callback});
snippet gdp
	getDefaultProps() {
		return {
			${1}
		};
	}
snippet gis
	getInitialState() {
		return {
			${1}: ${2}
		};
	}
snippet ism
	isMounted()
snippet jsx
	/**
	 * @jsx React.DOM
	 */
snippet pt
	propTypes: {
		${1}: PropTypes.${2:string}
	}
snippet rcc
	import React, { Component } from 'react'
	import PropTypes from 'prop-types'

	class ${1:ClassName} extends Component {

		render() {
			return (
				${0:<div />}
			)
		}
	}

	$1.propTypes = {

	}

	export default $1
snippet cc
	class ${1:ClassName} extends Component {

		render() {
			return (
				${0:<div />}
			)
		}
	}

	export const $1 = $1
snippet slc
	const ${1:ClassName} = (props) => {
		return (
			${0:<div />}
		)
	}

	$1.propTypes = {

	}
snippet rslc
	import React from 'react'
	import PropTypes from 'prop-types'
	import styles from './$1.scss'

	const ${1:ClassName} = (props) => {
		return (
			${0:<div />}
		)
	}

	$1.propTypes = {

	}

	export default $1
snippet rsfc
	import React from 'react'
	import PropTypes from 'prop-types'
	import './$1.css'

	const ${1:ClassName} = (props) => {
		return (
			${0:<div />}
		)
	}

	$1.propTypes = {

	}

	export default $1
snippet rrcc
	import { connect } from 'react-redux';
	import ${1:ChildClassName} from '${2}';

	const mapStateToProps = (state) => {
		return {
			${3}
		};
	};

	const $1Container = connect(mapStateToProps, {${4}})($1);

	export default $1Container;
snippet ren
	render() {
		return (
			${1:<div />}
		);
	}
snippet sst
	setState({
		${1}: ${2}
	});
snippet scu
	shouldComponentUpdate(nextProps, nextState) {
		${1}
	}
snippet props
	this.props.${1}
snippet state
	this.state.${1}
snippet trp
	transferPropsTo(${1});
snippet aaf
	() => {${1}}
snippet tst
	describe('${1}', () => {
		it('${2}', () => {${3}})
	})
snippet itst
	it('${1}', () => {${2}})
